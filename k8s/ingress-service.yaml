apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-service
  annotations: # higher-level config for ingress object created
    kubernetes.io/ingress.class: nginx # create ingress controller using nginx project
    nginx.ingress.kubernetes.io/use-regex: 'true'
    # how our copy of nginx behaves - remove the /api before sending to server
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # tell ingress to make use of a letsencrypt-issued cert
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # make sure nginx always forces users to use https
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  tls:
    - hosts: # want http traffic to be served on these 2 hostnames
      - k8s-multi.com
      - www.k8s-multi.com
      # name of secret we stored the cert in
      secretName: k8s-multi.com
  rules:
    # if someone comes to this host address, apply these rules to the request
    # doesn't apply to www.<same domain name>, as it's recognised as a separate host
    - host: k8s-multi.com
      http:
        paths:
          - path: /?(.*)
            backend:
                # no need to specify IP address, just need identifying name of service
              serviceName: client-cluster-ip-service
              servicePort: 3000
          - path: /api/?(.*)
            backend:
              serviceName: server-cluster-ip-service
              servicePort: 5000
    - host: www.k8s-multi.com
      http:
        paths:
          - path: /?(.*)
            backend:
                # no need to specify IP address, just need identifying name of service
              serviceName: client-cluster-ip-service
              servicePort: 3000
          - path: /api/?(.*)
            backend:
              serviceName: server-cluster-ip-service
              servicePort: 5000